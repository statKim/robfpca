% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IRLScpp.R
\name{delta.locpolysmooth}
\alias{delta.locpolysmooth}
\title{K-fold cross validation to find optimal delta for Huber loss function}
\usage{
delta.locpolysmooth(
  Lt,
  Ly,
  method = "HUBER",
  kernel = "epanechnikov",
  bw = NULL,
  delta_cand = NULL,
  cv_loss = "L1",
  K = 5,
  ncores = 1,
  ...
)
}
\arguments{
\item{Lt}{a list of vectors containing time points for each curve}

\item{Ly}{a list of vectors containing observations for each curve}

\item{method}{"Huber" or "WRM" or "Bisquare"}

\item{kernel}{a kernel function for kernel smoothing ("epan", "gauss" are supported.)}

\item{bw}{bandwidth}

\item{delta_cand}{user defined delta candidates for CV}

\item{cv_loss}{"L1" or "L2"}

\item{K}{the number of folds}

\item{ncores}{If ncores > 1, it implements \code{foreach()} in \code{doParallel} for CV.}

\item{...}{parameters are same with \code{local_kern_smooth()}.}
}
\value{
delta
}
\description{
K-fold cross validation to find optimal delta for Huber loss function
}
