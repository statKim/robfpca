% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mean.R
\name{meanfunc.rob}
\alias{meanfunc.rob}
\title{Local polynomial kernel smoothing with huber loss (mean estimator)}
\usage{
meanfunc.rob(
  Lt,
  Ly,
  newt = NULL,
  method = c("L2", "Huber", "WRM", "Bisquare"),
  bw = NULL,
  kernel = "epanechnikov",
  deg = 1,
  k2 = 1.345,
  ncores = 1,
  cv_delta_loss = "L1",
  cv_bw_loss = "HUBER",
  cv_K = 5,
  ...
)
}
\arguments{
\item{Lt}{a list of vectors containing time points for each curve}

\item{Ly}{a list of vectors containing observations for each curve}

\item{newt}{a vector containing time points to estimate}

\item{method}{"huber", "WRM" are supported}

\item{bw}{a bandwidth}

\item{kernel}{a kernel function for kernel smoothing ("epanechnikov", "gauss" are supported.)}

\item{deg}{a numeric scalar of polynomial degrees for the kernel smoother}

\item{k2}{If method == "Huber", it uses for $\\rho$ function in Huber loss.}

\item{ncores}{If ncores > 1, it implements \code{foreach()} in \code{doParallel} for CV.}

\item{cv_delta_loss}{a loss function for K-fold cross-validation for delta in Huber function}

\item{cv_bw_loss}{a loss function for K-fold cross-validation for bandwidth}

\item{cv_K}{a number of folds for K-fold cross-validation}

\item{...}{additional options}
}
\description{
Local polynomial kernel smoothing with huber loss (mean estimator)
}
