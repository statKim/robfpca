% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cov_local_M.R
\name{cov_local_M}
\alias{cov_local_M}
\title{Bivariate Local M-estimator for Covariance function (covariance estimator)}
\usage{
cov_local_M(
  X,
  bw = NULL,
  gr = NULL,
  diag = FALSE,
  cv = FALSE,
  ncores = 1,
  raw_cov = NULL,
  engine = "C++"
)
}
\arguments{
\item{X}{a n x p matrix}

\item{bw}{a numeric value of bandwidth. (Defalut is (max(gr) - min(gr)) / 5.)}

\item{gr}{a vector containing observed timepoints. (Default is \code{NULL}, and it is set to equal grid between 0 and 1.)}

\item{diag}{logical value whether containing diagonal parts of the covariance. (Default is \code{FALSE}.)}

\item{cv}{If it is \code{TRUE}, robust 5-fold cross-validation(using Huber loss) is performed to select the optimal bandwidth. (Default is \code{FALSE}.)}

\item{ncores}{a number of cores to select bandwidth from robust 5-fold cross-validation. (Defalut is 1.)}

\item{raw_cov}{a dataframe which is the return value from \code{get_raw_cov()}. (Default is \code{NULL}, and it is calculated automatically.)}

\item{engine}{the option for implementation. (Defalut is \code{C++}, and it is much faster than \code{R}.)}
}
\value{
a p x p matrix containing the covariance function from local M-estimation.
}
\description{
Obtain the bivariate local M-estimator for covariance function.
}
\details{
It provides 2 options for implementing R or C++.
}
